(single_input (compound_stmt (funcdef def addDigits (parameters ( (typedargslist (tfpdef num)) )) : (suite        (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom_expr (atom num)))))))))) (comp_op ==) (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom_expr (atom 0))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (flow_stmt (return_stmt return (testlist (test (or_test (and_test (not_test (comparison (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom_expr (atom 0)))))))))))))))))))  ))  )))) (stmt (compound_stmt (if_stmt if (test (or_test (and_test (not_test (comparison (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom_expr (atom num)))) % (factor (power (atom_expr (atom 9)))))))))) (comp_op ==) (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom_expr (atom 0))))))))))))))) : (suite            (stmt (simple_stmt (small_stmt (flow_stmt (return_stmt return (testlist (test (or_test (and_test (not_test (comparison (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom_expr (atom 9)))))))))))))))))))  ))  )))) (stmt (simple_stmt (small_stmt (flow_stmt (return_stmt return (testlist (test (or_test (and_test (not_test (comparison (expr (xor_expr (and_expr (shift_expr (arith_expr (term (factor (power (atom_expr (atom num)))) % (factor (power (atom_expr (atom 9))))))))))))))))))) \n)) \n))) \n)