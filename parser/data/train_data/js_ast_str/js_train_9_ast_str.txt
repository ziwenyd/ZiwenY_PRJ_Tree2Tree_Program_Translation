(program (sourceElements (sourceElement (statement (functionDeclaration function (identifier searchInsert) ( (formalParameterList (formalParameterArg (assignable (identifier nums))) , (formalParameterArg (assignable (identifier target)))) ) (functionBody { (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable (identifier l)) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable (identifier r)) = (singleExpression (singleExpression (singleExpression (identifier nums)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1)))))) (eos ;)))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (identifier nums)) [ (expressionSequence (singleExpression (identifier r))) ]) < (singleExpression (identifier target)))) ) (statement (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (identifier nums)) . (identifierName (identifier length)))) eos))) }))))) (sourceElement (statement (iterationStatement while ( (expressionSequence (singleExpression (singleExpression (identifier l)) <= (singleExpression (identifier r)))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier mid)) = (singleExpression (singleExpression (singleExpression (identifier Math)) . (identifierName (identifier floor))) (arguments ( (argument (singleExpression (singleExpression (identifier l)) + (singleExpression (singleExpression ( (expressionSequence (singleExpression (singleExpression (identifier r)) - (singleExpression (identifier l)))) )) / (singleExpression (literal (numericLiteral 2)))))) ))))) eos)) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (identifier nums)) [ (expressionSequence (singleExpression (identifier mid))) ]) == (singleExpression (identifier target)))) ) (statement (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (identifier mid))) eos))) })) else (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (identifier nums)) [ (expressionSequence (singleExpression (identifier mid))) ]) < (singleExpression (identifier target)))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier l)) = (singleExpression (singleExpression (identifier mid)) + (singleExpression (literal (numericLiteral 1)))))) (eos ;)))) })) else (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (identifier nums)) [ (expressionSequence (singleExpression (identifier mid))) ]) > (singleExpression (identifier target)))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier r)) = (singleExpression (singleExpression (identifier mid)) - (singleExpression (literal (numericLiteral 1)))))) (eos ;)))) })) else (statement (block { }))))))))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (identifier r)) + (singleExpression (literal (numericLiteral 1))))) eos)))) })))) (sourceElement (statement (emptyStatement_ ;)))) <EOF>)