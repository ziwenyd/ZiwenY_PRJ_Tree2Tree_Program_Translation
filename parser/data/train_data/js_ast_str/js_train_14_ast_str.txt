(program (sourceElements (sourceElement (statement (functionDeclaration function (identifier climbStairs) ( (formalParameterList (formalParameterArg (assignable (identifier n)))) ) (functionBody { (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier arr)) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (literal (numericLiteral 1)))) , (arrayElement (singleExpression (literal (numericLiteral 1))))) ])))) eos))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier i)) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) < (singleExpression (singleExpression (identifier n)) - (singleExpression (literal (numericLiteral 1)))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier arr)) . (identifierName (identifier push))) (arguments ( (argument (singleExpression (literal null))) )))) eos))) }))))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier i)) = (singleExpression (literal (numericLiteral 2))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) < (singleExpression (singleExpression (identifier arr)) . (identifierName (identifier length))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier arr)) [ (expressionSequence (singleExpression (identifier i))) ]) = (singleExpression (singleExpression (singleExpression (identifier arr)) [ (expressionSequence (singleExpression (singleExpression (identifier i)) - (singleExpression (literal (numericLiteral 1))))) ]) + (singleExpression (singleExpression (identifier arr)) [ (expressionSequence (singleExpression (singleExpression (identifier i)) - (singleExpression (literal (numericLiteral 2))))) ])))) eos))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier idx)) = (singleExpression (singleExpression (singleExpression (identifier arr)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1)))))) eos))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (identifier arr)) [ (expressionSequence (singleExpression (identifier idx))) ])) eos)))) })))) (sourceElement (statement (emptyStatement_ ;)))) <EOF>)