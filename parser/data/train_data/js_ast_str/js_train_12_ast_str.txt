(program (sourceElements (sourceElement (statement (functionDeclaration function (identifier plusOne) ( (formalParameterList (formalParameterArg (assignable (identifier digits)))) ) (functionBody { (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier lastInteger)) = (singleExpression (singleExpression (identifier digits)) [ (expressionSequence (singleExpression (singleExpression (singleExpression (identifier digits)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1))))) ]))) eos))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (identifier lastInteger)) < (singleExpression (literal (numericLiteral 9))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier digits)) [ (expressionSequence (singleExpression (singleExpression (singleExpression (identifier digits)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1))))) ]) ++)) eos))) })) else (statement (block { (statementList (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier pointer)) = (singleExpression (singleExpression (singleExpression (identifier digits)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1)))))) eos)) (statement (iterationStatement while ( (expressionSequence (singleExpression (singleExpression (singleExpression (identifier digits)) [ (expressionSequence (singleExpression (identifier pointer))) ]) == (singleExpression (literal (numericLiteral 9))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier digits)) [ (expressionSequence (singleExpression (identifier pointer))) ]) = (singleExpression (literal (numericLiteral 0))))) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier pointer)) --)) eos))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (identifier pointer)) >= (singleExpression (literal (numericLiteral 0))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier digits)) [ (expressionSequence (singleExpression (identifier pointer))) ]) ++)) eos))) })) else (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier digits)) . (identifierName (identifier unshift))) (arguments ( (argument (singleExpression (literal (numericLiteral 1)))) )))) eos))) }))))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (identifier digits))) eos)))) })))) (sourceElement (statement (emptyStatement_ ;)))) <EOF>)