(program (sourceElements (sourceElement (statement (functionDeclaration function (identifier reverseString) ( (formalParameterList (formalParameterArg (assignable (identifier s)))) ) (functionBody { (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier left)) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier right)) = (singleExpression (singleExpression (singleExpression (identifier s)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1)))))) (eos ;)))) (sourceElement (statement (iterationStatement while ( (expressionSequence (singleExpression (singleExpression (identifier left)) <= (singleExpression (identifier right)))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (identifier s)) [ (expressionSequence (singleExpression (identifier left))) ])) , (arrayElement (singleExpression (singleExpression (identifier s)) [ (expressionSequence (singleExpression (identifier right))) ]))) ])) = (singleExpression (arrayLiteral [ (elementList (arrayElement (singleExpression (singleExpression (identifier s)) [ (expressionSequence (singleExpression (identifier right))) ])) , (arrayElement (singleExpression (singleExpression (identifier s)) [ (expressionSequence (singleExpression (identifier left))) ]))) ])))) eos)) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier left)) ++)) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier right)) --)) (eos ;)))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (identifier s))) (eos ;))))) })))) (sourceElement (statement (emptyStatement_ ;)))) <EOF>)