(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable (identifier maxProfit)) = (singleExpression (anonymousFunction function ( (formalParameterList (formalParameterArg (assignable (identifier prices)))) ) (functionBody { (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier totalProfit)) = (singleExpression (literal (numericLiteral 0))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier maxPrice)) = (singleExpression (singleExpression (identifier prices)) [ (expressionSequence (singleExpression (singleExpression (singleExpression (identifier prices)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1))))) ]))) (eos ;)))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier i)) = (singleExpression (singleExpression (singleExpression (identifier prices)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1)))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) >= (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) --)) ) (statement (block { (statementList (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (identifier prices)) [ (expressionSequence (singleExpression (identifier i))) ]) > (singleExpression (identifier maxPrice)))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier maxPrice)) = (singleExpression (singleExpression (identifier prices)) [ (expressionSequence (singleExpression (identifier i))) ]))) (eos ;)))) })))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (singleExpression (identifier maxPrice)) - (singleExpression (singleExpression (identifier prices)) [ (expressionSequence (singleExpression (identifier i))) ])) > (singleExpression (identifier totalProfit)))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier totalProfit)) = (singleExpression (singleExpression (identifier maxPrice)) - (singleExpression (singleExpression (identifier prices)) [ (expressionSequence (singleExpression (identifier i))) ])))) (eos ;)))) }))))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (identifier totalProfit))) (eos ;))))) }))))) (eos ;))))) <EOF>)