(program (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable (identifier getRow)) = (singleExpression (anonymousFunction function ( (formalParameterList (formalParameterArg (assignable (identifier rowIndex)))) ) (functionBody { (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier const) (variableDeclaration (assignable (identifier res)) = (singleExpression (arrayLiteral [ elementList ])))) eos))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier i)) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) < (singleExpression (singleExpression (identifier rowIndex)) + (singleExpression (literal (numericLiteral 1)))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier res)) . (identifierName (identifier push))) (arguments ( (argument (singleExpression (literal null))) )))) eos))) }))))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier currentVal)) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier res)) [ (expressionSequence (singleExpression (literal (numericLiteral 0)))) ]) = (singleExpression (identifier currentVal)))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier res)) [ (expressionSequence (singleExpression (singleExpression (singleExpression (identifier res)) . (identifierName (identifier length))) - (singleExpression (literal (numericLiteral 1))))) ]) = (singleExpression (literal (numericLiteral 1))))) (eos ;)))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier i)) = (singleExpression (literal (numericLiteral 1))))) eos))) (sourceElement (statement (iterationStatement while ( (expressionSequence (singleExpression (singleExpression (identifier i)) <= (singleExpression (singleExpression (identifier rowIndex)) / (singleExpression (literal (numericLiteral 2)))))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier currentVal)) (assignmentOperator *=) (singleExpression (singleExpression (singleExpression (identifier rowIndex)) - (singleExpression (identifier i))) + (singleExpression (literal (numericLiteral 1)))))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier currentVal)) (assignmentOperator /=) (singleExpression (identifier i)))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier left)) = (singleExpression (identifier i)))) (eos ;))) (statement (variableStatement (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier right)) = (singleExpression (singleExpression (singleExpression (singleExpression (identifier res)) . (identifierName (identifier length))) - (singleExpression (identifier i))) - (singleExpression (literal (numericLiteral 1)))))) (eos ;))) (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (identifier left)) !== (singleExpression (identifier right)))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier res)) [ (expressionSequence (singleExpression (singleExpression (singleExpression (singleExpression (identifier res)) . (identifierName (identifier length))) - (singleExpression (identifier i))) - (singleExpression (literal (numericLiteral 1))))) ]) = (singleExpression (identifier currentVal)))) (eos ;)))) })))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier res)) [ (expressionSequence (singleExpression (identifier i))) ]) = (singleExpression (identifier currentVal)))) (eos ;))) (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier i)) ++)) eos))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (identifier res))) (eos ;))))) }))))) (eos ;))))) <EOF>)