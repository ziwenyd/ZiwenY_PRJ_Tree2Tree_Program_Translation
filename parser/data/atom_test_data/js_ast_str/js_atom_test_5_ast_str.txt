(program (sourceElements (sourceElement (statement (functionDeclaration function (identifier atomTest) ( ) (functionBody { (sourceElements (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (identifier result)) = (singleExpression (arrayLiteral [ elementList ])))) eos))) (sourceElement (statement (iterationStatement for ( (variableDeclarationList (varModifier (let_ let)) (variableDeclaration (assignable (identifier i)) = (singleExpression (literal (numericLiteral 0))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) < (singleExpression (literal (numericLiteral 10))))) ; (expressionSequence (singleExpression (singleExpression (identifier i)) ++)) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression (identifier result)) . (identifierName (identifier push))) (arguments ( (argument (singleExpression (identifier i))) )))) eos))) }))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (identifier result))) eos)))) }))))) <EOF>)