(program (sourceElements (sourceElement (statement (functionDeclaration function (identifier atomTest) ( ) (functionBody { (sourceElements (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable (identifier x)) = (singleExpression (literal (numericLiteral 1))))) eos))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable (identifier y)) = (singleExpression (literal (numericLiteral 2))))) eos))) (sourceElement (statement (variableStatement (variableDeclarationList (varModifier var) (variableDeclaration (assignable (identifier z)) = (singleExpression (literal (numericLiteral 3))))) eos))) (sourceElement (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (identifier x)) == (singleExpression (identifier y)))) ) (statement (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (identifier x))) eos))) })) else (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (identifier x)) > (singleExpression (identifier y)))) ) (statement (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (identifier y))) eos))) })) else (statement (ifStatement if ( (expressionSequence (singleExpression (singleExpression (identifier x)) > (singleExpression (identifier z)))) ) (statement (block { (statementList (statement (returnStatement return (expressionSequence (singleExpression (identifier z))) eos))) })) else (statement (block { }))))))))) (sourceElement (statement (returnStatement return (expressionSequence (singleExpression - (singleExpression (literal (numericLiteral 1))))) eos)))) }))))) <EOF>)